{"version":3,"sources":["validation/index.js","components/StyledInput/index.js","utils/masks.js","components/Fields/BillingFields/index.js","components/Fields/ShippingFields/index.js","pages/Checkout/CheckoutCart/CheckoutProduct/index.js","pages/Checkout/CheckoutCart/index.js","pages/Checkout/Shipping/DeliveryBox/index.js","pages/Checkout/Shipping/index.js","pages/Checkout/Billing/PaymentFields/index.js","pages/Checkout/Billing/index.js","pages/Checkout/FormsPreview/index.js","pages/Checkout/CheckoutPreview/index.js","components/FormStepper/index.js","pages/Checkout/index.js"],"names":["required","value","undefined","validate","inputs","errors","zip","city","email","phone","country","address","password","lastname","firstname","cardnumber","exp","cvv","length","test","StyledInput","input","helperText","meta","touched","invalid","error","custom","fullWidth","variant","masks","createTextMask","guide","pattern","cardexp","BillingFields","container","spacing","item","xs","sm","name","label","component","inputProps","maxLength","type","ShippingFields","CheckoutProduct","info","currency","className","src","preview_image","alt","Typography","color","title","subtitle","size","quantity","price","connect","state","products","deliveryMethods","cart","selectedDelivery","totalPrice","useState","expand","setExpand","Card","onClick","ExpandLess","ExpandMore","cx","pseudo","gutterBottom","freeIfZero","map","index","key","useStyles","makeStyles","radioGroup","marginTop","padding","fontWeight","plan","textTransform","DeliveryBox","methods","onChange","selected","classes","RadioGroup","evt","target","Object","keys","FormControlLabel","control","Radio","reduxForm","form","enableReinitialize","handleSubmit","submitting","pristine","onSubmit","setDeliveryMethod","buttons","data","Lock","fontSize","Box","display","justifyContent","mt","width","PaymentFields","props","mb","Grid","Field","shipping","checked","setChecked","a","async","rest","shippingRest","card","Checkbox","FormsPreview","values","content","fullname","tranfsormValues","entries","children","CheckoutPreview","onSumbit","shippingPreview","billingPreview","deliveryPreview","step","setStep","steps","handleNext","prevStep","handleBack","renderButtons","condition","Button","disabled","style","marginRight","Stepper","activeStep","alternativeLabel","Step","StepLabel","initialValues","initialValuesShipping","submitShipping","initialValuesBilling","sumbitBilling","speed","_capitalize","preventDefault","checkoutData","addresses","billing","onCheckout","CustomTypography","withStyles","root","marginBottom","auth","checkout","submitCheckout","useEffect","history","push","align","FormStepper"],"mappings":"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","file":"static/js/5.84c6c321.chunk.js","sourcesContent":["export const required = value => (value ? undefined : null);\r\n// const max = (max) => (value) =>\r\n//   value && value.length > max ? `Must be ${max} characters or less` : undefined\r\n\r\nexport const validate = inputs => {\r\n  const errors = {};\r\n  const emailRegex = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\r\n\r\n  const {\r\n    zip,\r\n    city,\r\n    email,\r\n    phone,\r\n    country,\r\n    address,\r\n    password,\r\n    lastname,\r\n    firstname\r\n  } = inputs;\r\n  const { cardnumber, exp, cvv } = inputs;\r\n\r\n  if (!firstname) {\r\n    errors.firstname = \"Please enter your first name\";\r\n  } else if (firstname.length < 2) {\r\n    errors.firstname = \"Entry is too short, please lengthen your entry\";\r\n  }\r\n\r\n  if (!lastname) {\r\n    errors.lastname = \"Please enter your last name\";\r\n  } else if (lastname.length < 2) {\r\n    errors.lastname = \"Entry is too short, please lengthen your entry\";\r\n  }\r\n\r\n  if (!country) {\r\n    errors.country = \"Please enter country\";\r\n  } else if (country.length < 2) {\r\n    errors.country = \"Please enter a valid country\";\r\n  }\r\n\r\n  if (!city) {\r\n    errors.city = \"Please enter city\";\r\n  } else if (city.length < 2) {\r\n    errors.city = \"Please enter a valid city\";\r\n  }\r\n\r\n  if (!zip) {\r\n    errors.zip = \"Please enter your postal code\";\r\n  } else if (zip.length < 3) {\r\n    errors.zip = \"Please enter a valid postal code\";\r\n  }\r\n\r\n  if (!address) {\r\n    errors.address = \"Please enter your address\";\r\n  } else if (address.length < 2) {\r\n    errors.address = \"Please enter a valid address\";\r\n  }\r\n\r\n  if (!email) {\r\n    errors.email = \"Please enter your email address\";\r\n  } else if (!emailRegex.test(email)) {\r\n    errors.email = \"Please enter a valid email address\";\r\n  }\r\n\r\n  if (!phone) {\r\n    errors.phone = \"Please enter your phone number\";\r\n  } else if (phone.length <= 9) {\r\n    errors.phone = \"Please enter a valid phone number\";\r\n  }\r\n\r\n  if (!password) {\r\n    errors.password = \"Please enter your password\";\r\n  } else if (password.length < 5) {\r\n    errors.password = \"Password is too short\";\r\n  }\r\n\r\n  if (!cardnumber || cardnumber.length < 16)\r\n    errors.cardnumber = \"Please enter card number\";\r\n  if (!exp || exp.length < 4) errors.exp = \"Please enter expiration date\";\r\n  if (!cvv || cvv.length < 4) errors.cvv = \"Please enter security code\";\r\n\r\n  return errors;\r\n};\r\n","import React from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\n\r\nconst StyledInput = ({\r\n  input,\r\n  helperText,\r\n  meta: { touched, invalid, error },\r\n  ...custom\r\n}) => (\r\n  <TextField\r\n    fullWidth\r\n    variant=\"outlined\"\r\n    {...input}\r\n    {...custom}\r\n    helperText={error && touched ? error : null}\r\n    error={touched && invalid}\r\n  />\r\n);\r\n\r\nexport default StyledInput;\r\n","import {createTextMask} from 'redux-form-input-masks';\r\n\r\nconst masks = {\r\n  phone: createTextMask({\r\n    guide: false,\r\n    pattern: '9 (99) 999 99 99'\r\n  }),\r\n  cardnumber: createTextMask({\r\n    guide: false,\r\n    pattern: '9999 9999 9999 9999'\r\n  }),\r\n  cardexp: createTextMask({\r\n    guide: false,\r\n    pattern: '99/99'\r\n }),\r\n}\r\n\r\nexport default masks\r\n","import React from \"react\";\r\nimport { Field } from \"redux-form\";\r\nimport StyledInput from \"components/StyledInput\";\r\nimport { required } from \"validation\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nexport const BillingFields = () => {\r\n  return (\r\n    <Grid container spacing={1}>\r\n      <Grid item xs={12} sm={6}>\r\n        <Field\r\n          name=\"firstname\"\r\n          label=\"First Name\"\r\n          variant=\"outlined\"\r\n          component={StyledInput}\r\n          validate={[required]}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <Field\r\n          name=\"lastname\"\r\n          label=\"Last Name\"\r\n          component={StyledInput}\r\n          validate={[required]}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Field\r\n          name=\"address\"\r\n          label=\"Address\"\r\n          component={StyledInput}\r\n          validate={[required]}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={4}>\r\n        <Field\r\n          name=\"country\"\r\n          label=\"Country\"\r\n          component={StyledInput}\r\n          validate={[required]}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6} sm={4}>\r\n        <Field name=\"city\" label=\"City\" component={StyledInput} validate={[required]} />\r\n      </Grid>\r\n      <Grid item xs={6} sm={4}>\r\n        <Field\r\n          name=\"zip\"\r\n          label=\"Postal Code\"\r\n          inputProps={{ maxLength: 12 }}\r\n          type=\"tel\"\r\n          component={StyledInput}\r\n          validate={[required]}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default BillingFields;\r\n","import React from \"react\";\r\nimport { Field } from \"redux-form\";\r\nimport StyledInput from \"components/StyledInput\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport masks from \"utils/masks\";\r\n\r\nconst ShippingFields = () => {\r\n  return (\r\n    <Grid container spacing={1}>\r\n      <Grid item xs={12} sm={6}>\r\n        <Field name=\"firstname\" label=\"First Name\" component={StyledInput} />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <Field name=\"lastname\" label=\"Last Name\" component={StyledInput} />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Field name=\"address\" label=\"Address\" component={StyledInput} />\r\n      </Grid>\r\n      <Grid item xs={12} sm={4}>\r\n        <Field name=\"country\" label=\"Country\" component={StyledInput} />\r\n      </Grid>\r\n      <Grid item xs={6} sm={4}>\r\n        <Field name=\"city\" label=\"City\" component={StyledInput} />\r\n      </Grid>\r\n      <Grid item xs={6} sm={4}>\r\n        <Field\r\n          name=\"zip\"\r\n          label=\"Postal Code\"\r\n          inputProps={{ maxLength: 12 }}\r\n          type=\"tel\"\r\n          component={StyledInput}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Field name=\"email\" label=\"Email\" type=\"email\" component={StyledInput} />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Field\r\n          name=\"phone\"\r\n          label=\"Phone\"\r\n          inputProps={{ maxLength: 30 }}\r\n          type=\"tel\"\r\n          component={StyledInput}\r\n          {...masks.phone}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ShippingFields;\r\n","import React from \"react\";\r\nimport \"./styles.sass\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst CheckoutProduct = ({ info, currency }) => {\r\n  return (\r\n    <div className=\"checkoutProduct\">\r\n      <div className=\"checkoutProduct-img\">\r\n        <img src={info.preview_image} alt=\"img\" />\r\n      </div>\r\n      <div className=\"checkoutProduct-info\">\r\n        <Typography component=\"div\" color=\"textPrimary\" className=\"checkoutProduct-info-title\">\r\n          {info.title}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"textSecondary\">\r\n          {info.subtitle}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"div\">\r\n          Color: {info.color}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"div\">\r\n          Size: {info.size}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"div\">\r\n          Qty: {info.quantity} / {currency}\r\n          {info.price}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"textPrimary\" component=\"div\">\r\n          {currency}\r\n          {info.quantity * info.price}\r\n        </Typography>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckoutProduct;\r\n","import React, { useState } from \"react\";\r\nimport \"./styles.sass\";\r\nimport { connect } from \"react-redux\";\r\nimport { Typography, Card } from \"@material-ui/core\";\r\nimport { ExpandLess, ExpandMore } from \"@material-ui/icons\";\r\nimport CheckoutProduct from \"./CheckoutProduct\";\r\nimport { freeIfZero } from \"utils/index\";\r\nimport cx from \"classnames\";\r\n\r\nconst CheckoutCart = ({\r\n  currency,\r\n  deliveryMethods,\r\n  selectedDelivery,\r\n  cart,\r\n  totalPrice\r\n}) => {\r\n  const [expand, setExpand] = useState(false);\r\n\r\n  const renderItems = () =>\r\n    cart.map((item, index) => (\r\n      <CheckoutProduct key={index} info={item} currency={currency} />\r\n    ));\r\n\r\n  return (\r\n    <Card className=\"checkoutCartMain\">\r\n      <div className=\"checkoutCartHeader\">\r\n        <Typography variant=\"h5\" component=\"h4\">\r\n          Order Summary\r\n        </Typography>\r\n        <div className=\"expandCheckoutCart\" onClick={() => setExpand(!expand)}>\r\n          {expand ? <ExpandLess /> : <ExpandMore />}\r\n        </div>\r\n      </div>\r\n      <div className=\"checkoutCartMainContent\">\r\n        <div className={cx(\"checkoutSummary\", { pseudo: expand })}>\r\n          <Typography\r\n            variant=\"body2\"\r\n            component=\"div\"\r\n            color=\"textSecondary\"\r\n            gutterBottom\r\n          >\r\n            Subtotal:{\" \"}\r\n            <span>\r\n              {currency}\r\n              {totalPrice}\r\n            </span>\r\n          </Typography>\r\n          <Typography variant=\"body2\" component=\"div\" color=\"textSecondary\">\r\n            Delivery:{\" \"}\r\n            <span>\r\n              {freeIfZero(deliveryMethods[selectedDelivery], currency)}\r\n            </span>\r\n          </Typography>\r\n          <Typography variant=\"h6\" component=\"div\">\r\n            Total:\r\n            <Typography component=\"span\" color=\"error\">\r\n              {currency}\r\n              {totalPrice + deliveryMethods[selectedDelivery]}\r\n            </Typography>\r\n          </Typography>\r\n        </div>\r\n        <div className={expand ? \"expand\" : \"hidden\"}>{renderItems()}</div>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default connect(state => ({\r\n  currency: state.products.currency,\r\n  deliveryMethods: state.cart.deliveryMethods,\r\n  cart: state.cart.cart,\r\n  selectedDelivery: state.cart.selectedDelivery,\r\n  totalPrice: state.cart.totalPrice\r\n}))(CheckoutCart);\r\n","import React from \"react\";\r\nimport {\r\n  Radio,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Typography\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { freeIfZero } from \"utils/index\";\r\n\r\nconst useStyles = makeStyles({\r\n  radioGroup: {\r\n    marginTop: 24,\r\n    padding: 10\r\n  },\r\n  title: {\r\n    fontWeight: 600\r\n  },\r\n  plan: {\r\n    textTransform: \"capitalize\"\r\n  }\r\n});\r\n\r\nconst DeliveryBox = ({ currency, methods, onChange, selected }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <RadioGroup\r\n      value={selected}\r\n      className={classes.radioGroup}\r\n      onChange={evt => onChange(evt.target.value)}\r\n    >\r\n      <Typography variant=\"subtitle1\" className={classes.title} gutterBottom>\r\n        Select your shipping speed\r\n      </Typography>\r\n      {Object.keys(methods).map(key => (\r\n        <FormControlLabel\r\n          key={key}\r\n          className={classes.plan}\r\n          value={key}\r\n          control={<Radio />}\r\n          label={key + \" - \" + freeIfZero(methods[key], currency)}\r\n        />\r\n      ))}\r\n    </RadioGroup>\r\n  );\r\n};\r\n\r\nexport default DeliveryBox;\r\n","import React from \"react\";\r\nimport \"./styles.sass\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport { Typography, Box, Card } from \"@material-ui/core\";\r\nimport { Lock } from \"@material-ui/icons\";\r\nimport DeliveryBox from \"./DeliveryBox\";\r\nimport { validate } from \"validation\";\r\nimport ShippingFields from \"components/Fields/ShippingFields\";\r\n\r\nconst Shipping = ({\r\n  handleSubmit,\r\n  invalid,\r\n  submitting,\r\n  pristine,\r\n  onSubmit,\r\n  selectedDelivery,\r\n  currency,\r\n  deliveryMethods,\r\n  setDeliveryMethod,\r\n  buttons\r\n}) => {\r\n  return (\r\n    <Card className=\"shipping\">\r\n      <form onSubmit={handleSubmit(data => onSubmit(data))}>\r\n        <ShippingFields />\r\n        <Typography className=\"shippingNote\" variant=\"caption\">\r\n          <Lock fontSize=\"inherit\" />\r\n          Your privacy is important to us. We will only contact you if there is an issue\r\n          with your order.\r\n        </Typography>\r\n        <DeliveryBox\r\n          onChange={setDeliveryMethod}\r\n          methods={deliveryMethods}\r\n          selected={selectedDelivery}\r\n          currency={currency}\r\n        />\r\n        <Box display=\"flex\" justifyContent=\"flex-end\" mt={3} width={1}>\r\n          {buttons({ invalid, submitting, pristine })}\r\n        </Box>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default reduxForm({\r\n  form: \"shipping\",\r\n  validate,\r\n  enableReinitialize: true\r\n})(Shipping);\r\n","import React from \"react\";\r\nimport { Field } from \"redux-form\";\r\nimport { Grid, Box } from \"@material-ui/core\";\r\nimport StyledInput from \"components/StyledInput\";\r\nimport masks from \"utils/masks\";\r\n\r\nconst PaymentFields = props => {\r\n  return (\r\n    <>\r\n      <Box fontWeight={600} mb={2}>\r\n        Add Card\r\n      </Box>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={12} sm={4}>\r\n          <Field\r\n            name=\"cardnumber\"\r\n            type=\"tel\"\r\n            label=\"Card Number\"\r\n            component={StyledInput}\r\n            className=\"cardnumber\"\r\n            {...masks.cardnumber}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n          <Field\r\n            name=\"exp\"\r\n            type=\"tel\"\r\n            label=\"MM/YY\"\r\n            component={StyledInput}\r\n            className=\"exp\"\r\n            {...masks.cardexp}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n          <Field\r\n            name=\"cvv\"\r\n            type=\"tel\"\r\n            label=\"Secure Code\"\r\n            component={StyledInput}\r\n            className=\"cvv\"\r\n            inputProps={{ maxLength: 4 }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaymentFields;\r\n","import React, { useState } from \"react\";\r\nimport \"./styles.sass\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport { FormControlLabel, Checkbox, Box, Card } from \"@material-ui/core\";\r\nimport { validate } from \"validation\";\r\nimport PaymentFields from \"./PaymentFields\";\r\nimport BillingFields from \"components/Fields/BillingFields\";\r\n\r\nconst Billing = ({\r\n  handleSubmit,\r\n  invalid,\r\n  submitting,\r\n  pristine,\r\n  onSubmit,\r\n  shipping,\r\n  buttons\r\n}) => {\r\n  const [checked, setChecked] = useState(true);\r\n  const submit = async ({ cardnumber, exp, cvv, ...rest }) => {\r\n    const { phone, email, ...shippingRest } = shipping;\r\n    const data = {\r\n      card: {\r\n        cardnumber,\r\n        exp,\r\n        cvv\r\n      },\r\n      address: checked ? { ...shippingRest } : { ...rest }\r\n    };\r\n    onSubmit(data);\r\n  };\r\n\r\n  return (\r\n    <Card className=\"billing\">\r\n      <form onSubmit={handleSubmit(submit)}>\r\n        <PaymentFields />\r\n        <FormControlLabel\r\n          className=\"billingAddressCheckbox\"\r\n          checked={checked}\r\n          onChange={() => setChecked(!checked)}\r\n          control={<Checkbox />}\r\n          label=\"Billing address same as shipping\"\r\n        />\r\n        {!checked && <BillingFields />}\r\n        <Box display=\"flex\" justifyContent=\"flex-end\" mt={3} width={1}>\r\n          {buttons({ invalid, submitting, pristine })}\r\n        </Box>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default reduxForm({\r\n  form: \"billing\",\r\n  validate,\r\n  enableReinitialize: true\r\n})(Billing);\r\n","import React from \"react\";\r\nimport \"./styles.sass\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst FormsPreview = ({ title, content = {} }) => {\r\n  const tranfsormValues = data => {\r\n    const { firstname, lastname, ...rest } = data;\r\n    if (firstname || lastname) {\r\n      return {\r\n        fullname: `${firstname} ${lastname}`,\r\n        ...rest\r\n      };\r\n    }\r\n    return rest;\r\n  };\r\n\r\n  const renderValues = values =>\r\n    Object.entries(values).map(([key, value]) => (\r\n      <Typography\r\n        key={key}\r\n        variant=\"body2\"\r\n        color=\"textSecondary\"\r\n        children={value}\r\n      />\r\n    ));\r\n\r\n  return (\r\n    <div className=\"formPreview\">\r\n      {title && (\r\n        <Typography gutterBottom className=\"formPreview-title\">\r\n          {title}\r\n        </Typography>\r\n      )}\r\n      <div>{renderValues(tranfsormValues(content))}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormsPreview;\r\n","import React from \"react\";\r\nimport \"./styles.sass\";\r\nimport { Box, Card } from \"@material-ui/core\";\r\nimport FormsPreview from \"pages/Checkout/FormsPreview\";\r\n\r\nconst CheckoutPreview = props => {\r\n  return (\r\n    <Box width={1}>\r\n      <Card className=\"CheckoutPreview\">\r\n        <form onSubmit={props.onSumbit}>\r\n          <FormsPreview\r\n            title=\"Shipping Address\"\r\n            content={props.shippingPreview}\r\n          />\r\n          <FormsPreview\r\n            title=\"Billing Address\"\r\n            content={props.billingPreview.address}\r\n          />\r\n          <FormsPreview\r\n            title=\"Delivery Speed\"\r\n            content={props.deliveryPreview}\r\n          />\r\n          <Box display=\"flex\" justifyContent=\"flex-end\" mt={3}>\r\n            {props.buttons(props)}\r\n          </Box>\r\n        </form>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CheckoutPreview;\r\n","import React, { useState } from \"react\";\r\nimport Shipping from \"pages/Checkout/Shipping\";\r\nimport Billing from \"pages/Checkout/Billing\";\r\nimport CheckoutPreview from \"pages/Checkout/CheckoutPreview\";\r\nimport { freeIfZero } from \"utils/index\";\r\nimport _capitalize from \"lodash/capitalize\";\r\nimport { Button, Box, StepLabel, Step, Stepper } from \"@material-ui/core\";\r\n\r\nexport default props => {\r\n  const [step, setStep] = useState(0);\r\n  const steps = [\"Shipping\", \"Billing\", \"Place Order\"];\r\n  const handleNext = () => setStep(prevStep => prevStep + 1);\r\n  const handleBack = () => setStep(prevStep => prevStep - 1);\r\n  const submitCheckout = async evt => {\r\n    evt.preventDefault();\r\n    const checkoutData = {\r\n      addresses: {\r\n        shipping: props.shippingPreview,\r\n        billing: props.billingPreview\r\n      }\r\n    };\r\n    await props.onCheckout(checkoutData);\r\n  };\r\n\r\n  const renderSteppers = () =>\r\n    steps.map(label => (\r\n      <Step key={label}>\r\n        <StepLabel>{label}</StepLabel>\r\n      </Step>\r\n    ));\r\n\r\n  const renderButtons = condition => {\r\n    return (\r\n      <>\r\n        <Button\r\n          disabled={step === 0}\r\n          onClick={handleBack}\r\n          style={{ marginRight: 8 }}\r\n        >\r\n          Back\r\n        </Button>\r\n        <Button\r\n          disabled={condition}\r\n          size=\"large\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n        >\r\n          {step === steps.length - 1 ? \"Place Order\" : \"Next\"}\r\n        </Button>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Box width={1}>\r\n      <Stepper activeStep={step} alternativeLabel>\r\n        {renderSteppers()}\r\n      </Stepper>\r\n      <div>\r\n        {step === 0 ? (\r\n          <Shipping\r\n            currency={props.currency}\r\n            initialValues={props.initialValuesShipping}\r\n            onSubmit={data => {\r\n              props.submitShipping(data);\r\n              handleNext();\r\n            }}\r\n            selectedDelivery={props.selectedDelivery}\r\n            deliveryMethods={props.deliveryMethods}\r\n            setDeliveryMethod={props.setDeliveryMethod}\r\n            buttons={props => renderButtons(props.invalid || props.submitting)}\r\n          />\r\n        ) : step === 1 ? (\r\n          <Billing\r\n            initialValues={props.initialValuesBilling}\r\n            onSubmit={data => {\r\n              props.sumbitBilling(data);\r\n              handleNext();\r\n            }}\r\n            shipping={props.shippingPreview}\r\n            buttons={props =>\r\n              renderButtons(props.invalid || props.submitting || props.pristine)\r\n            }\r\n          />\r\n        ) : step === 2 ? (\r\n          <CheckoutPreview\r\n            shippingPreview={props.shippingPreview}\r\n            billingPreview={props.billingPreview}\r\n            deliveryPreview={{\r\n              speed: `${_capitalize(props.selectedDelivery)}: ${freeIfZero(\r\n                props.deliveryMethods[props.selectedDelivery],\r\n                props.currency\r\n              )}`\r\n            }}\r\n            onSumbit={submitCheckout}\r\n            buttons={() => renderButtons(false)}\r\n          />\r\n        ) : null}\r\n      </div>\r\n    </Box>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport \"./styles.sass\";\r\nimport { connect } from \"react-redux\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport CheckoutCart from \"./CheckoutCart\";\r\nimport {\r\n  submitShipping,\r\n  setDeliveryMethod,\r\n  submitCheckout,\r\n  sumbitBilling\r\n} from \"redux/actions\";\r\nimport FormStepper from \"components/FormStepper\";\r\n\r\nconst CustomTypography = withStyles(() => ({\r\n  root: {\r\n    marginBottom: 40,\r\n    \"@media (max-width: 599.5px)\": {\r\n      marginBottom: 20\r\n    }\r\n  }\r\n}))(Typography);\r\n\r\nconst Checkout = props => {\r\n  useEffect(() => {\r\n    if (!props.cart.length) {\r\n      props.history.push(\"/\");\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"checkout\">\r\n      <CustomTypography variant=\"h4\" component=\"h2\" align=\"center\">\r\n        CHECKOUT\r\n      </CustomTypography>\r\n      <div className=\"checkout-content\">\r\n        <div className=\"checkout-content-forms\">\r\n          <FormStepper\r\n            currency={props.currency}\r\n            initialValuesShipping={props.shipping}\r\n            shippingPreview={props.shippingPreview}\r\n            billingPreview={props.billingPreview}\r\n            submitShipping={props.submitShipping}\r\n            sumbitBilling={props.sumbitBilling}\r\n            selectedDelivery={props.selectedDelivery}\r\n            deliveryMethods={props.deliveryMethods}\r\n            setDeliveryMethod={props.setDeliveryMethod}\r\n            initialValuesBilling={props.billing}\r\n            onCheckout={props.submitCheckout}\r\n            shipping={props.shippingPreview}\r\n          />\r\n        </div>\r\n        <div className=\"checkout-content-cart\">\r\n          <CheckoutCart />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  state => ({\r\n    cart: state.cart.cart,\r\n    currency: state.products.currency,\r\n    shipping: state.auth.addresses.shipping,\r\n    shippingPreview: state.cart.checkout.addresses.shipping,\r\n    billingPreview: state.cart.checkout.addresses.billing,\r\n    selectedDelivery: state.cart.selectedDelivery,\r\n    deliveryMethods: state.cart.deliveryMethods,\r\n    billing: state.auth.addresses.billing\r\n  }),\r\n  { submitShipping, sumbitBilling, setDeliveryMethod, submitCheckout }\r\n)(Checkout);\r\n"],"sourceRoot":""}