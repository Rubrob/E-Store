{"version":3,"sources":["validation/index.js","components/StyledInput/index.js","pages/SingUpIn/LogInFields/index.js","pages/SingUpIn/SignUpFields/index.js","pages/SingUpIn/index.js"],"names":["required","value","undefined","validate","inputs","errors","zip","city","email","phone","country","address","password","lastname","firstname","cardnumber","exp","cvv","length","test","StyledInput","input","helperText","meta","touched","invalid","error","custom","fullWidth","variant","Field","className","name","label","type","component","autoComplete","SignUp","props","toggle","setState","state","onSubmit","data","a","async","logIn","signUp","responseThirdParty","party","res","oauthThirdParty","accessToken","renderForm","handleSubmit","LogInFields","Box","mt","Button","color","size","this","isAuthenticated","history","push","linkText","linkTextReverse","linkTitle","formTitle","Container","maxWidth","Typography","appId","process","textButton","cssClass","fields","callback","icon","clientId","buttonText","onSuccess","onFailure","cookiePolicy","onClick","Component","compose","connect","errorMessage","auth","reduxForm","form","enableReinitialize"],"mappings":"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","file":"static/js/11.cefc39c0.chunk.js","sourcesContent":["export const required = value => (value ? undefined : null);\r\n// const max = (max) => (value) =>\r\n//   value && value.length > max ? `Must be ${max} characters or less` : undefined\r\n\r\nexport const validate = inputs => {\r\n  const errors = {};\r\n  const emailRegex = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\r\n\r\n  const {\r\n    zip,\r\n    city,\r\n    email,\r\n    phone,\r\n    country,\r\n    address,\r\n    password,\r\n    lastname,\r\n    firstname\r\n  } = inputs;\r\n  const { cardnumber, exp, cvv } = inputs;\r\n\r\n  if (!firstname) {\r\n    errors.firstname = \"Please enter your first name\";\r\n  } else if (firstname.length < 2) {\r\n    errors.firstname = \"Entry is too short, please lengthen your entry\";\r\n  }\r\n\r\n  if (!lastname) {\r\n    errors.lastname = \"Please enter your last name\";\r\n  } else if (lastname.length < 2) {\r\n    errors.lastname = \"Entry is too short, please lengthen your entry\";\r\n  }\r\n\r\n  if (!country) {\r\n    errors.country = \"Please enter country\";\r\n  } else if (country.length < 2) {\r\n    errors.country = \"Please enter a valid country\";\r\n  }\r\n\r\n  if (!city) {\r\n    errors.city = \"Please enter city\";\r\n  } else if (city.length < 2) {\r\n    errors.city = \"Please enter a valid city\";\r\n  }\r\n\r\n  if (!zip) {\r\n    errors.zip = \"Please enter your postal code\";\r\n  } else if (zip.length < 3) {\r\n    errors.zip = \"Please enter a valid postal code\";\r\n  }\r\n\r\n  if (!address) {\r\n    errors.address = \"Please enter your address\";\r\n  } else if (address.length < 2) {\r\n    errors.address = \"Please enter a valid address\";\r\n  }\r\n\r\n  if (!email) {\r\n    errors.email = \"Please enter your email address\";\r\n  } else if (!emailRegex.test(email)) {\r\n    errors.email = \"Please enter a valid email address\";\r\n  }\r\n\r\n  if (!phone) {\r\n    errors.phone = \"Please enter your phone number\";\r\n  } else if (phone.length <= 9) {\r\n    errors.phone = \"Please enter a valid phone number\";\r\n  }\r\n\r\n  if (!password) {\r\n    errors.password = \"Please enter your password\";\r\n  } else if (password.length < 5) {\r\n    errors.password = \"Password is too short\";\r\n  }\r\n\r\n  if (!cardnumber || cardnumber.length < 16)\r\n    errors.cardnumber = \"Please enter card number\";\r\n  if (!exp || exp.length < 4) errors.exp = \"Please enter expiration date\";\r\n  if (!cvv || cvv.length < 4) errors.cvv = \"Please enter security code\";\r\n\r\n  return errors;\r\n};\r\n","import React from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\n\r\nconst StyledInput = ({\r\n  input,\r\n  helperText,\r\n  meta: { touched, invalid, error },\r\n  ...custom\r\n}) => (\r\n  <TextField\r\n    fullWidth\r\n    variant=\"outlined\"\r\n    {...input}\r\n    {...custom}\r\n    helperText={error && touched ? error : null}\r\n    error={touched && invalid}\r\n  />\r\n);\r\n\r\nexport default StyledInput;\r\n","import React from \"react\";\r\nimport { Field } from \"redux-form\";\r\nimport StyledInput from \"components/StyledInput\";\r\n\r\nexport default () => (\r\n  <>\r\n    <Field\r\n      className=\"input\"\r\n      name=\"email\"\r\n      label=\"Email\"\r\n      type=\"email\"\r\n      component={StyledInput}\r\n    />\r\n    <Field\r\n      className=\"input\"\r\n      name=\"password\"\r\n      autoComplete=\"on\"\r\n      label=\"Password\"\r\n      type=\"password\"\r\n      component={StyledInput}\r\n    />\r\n  </>\r\n);\r\n","import React from \"react\";\r\nimport { Field } from \"redux-form\";\r\nimport StyledInput from \"components/StyledInput\";\r\n\r\nexport default () => (\r\n  <>\r\n    <Field\r\n      className=\"input\"\r\n      name=\"firstname\"\r\n      label=\"First Name\"\r\n      component={StyledInput}\r\n    />\r\n    <Field\r\n      className=\"input\"\r\n      name=\"lastname\"\r\n      label=\"Last Name\"\r\n      component={StyledInput}\r\n    />\r\n    <Field\r\n      className=\"input\"\r\n      name=\"email\"\r\n      label=\"Email\"\r\n      type=\"email\"\r\n      component={StyledInput}\r\n    />\r\n    <Field\r\n      className=\"input\"\r\n      name=\"password\"\r\n      autoComplete=\"on\"\r\n      label=\"Password\"\r\n      type=\"password\"\r\n      component={StyledInput}\r\n    />\r\n  </>\r\n);\r\n","import React, { Component } from \"react\";\r\nimport \"./styles.sass\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport FacebookLogin from \"react-facebook-login\";\r\nimport GoogleLogin from \"react-google-login\";\r\nimport { Button, Typography, Box, Container } from \"@material-ui/core\";\r\nimport { validate } from \"validation\";\r\nimport { signUp, logIn, oauthThirdParty } from \"redux/actions\";\r\nimport LogInFields from \"./LogInFields\";\r\nimport SingUpFields from \"./SignUpFields\";\r\n\r\nclass SignUp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      toggle: true\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.isAuthenticated && this.props.history.push(\"/\");\r\n  }\r\n\r\n  toggle = () => this.setState({ toggle: !this.state.toggle });\r\n\r\n  onSubmit = async data => {\r\n    if (this.state.toggle) {\r\n      await this.props.logIn(data);\r\n    } else {\r\n      await this.props.signUp(data);\r\n    }\r\n  };\r\n\r\n  responseThirdParty = party => async res => {\r\n    await this.props.oauthThirdParty(party, res.accessToken);\r\n  };\r\n\r\n  renderForm = () => (\r\n    <form onSubmit={this.props.handleSubmit(this.onSubmit)}>\r\n      <>{this.state.toggle ? <LogInFields /> : <SingUpFields />}</>\r\n      <Box mt={4}>\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"large\"\r\n          fullWidth\r\n        >\r\n          {this.state.toggle ? \"Log In\" : \"Sing Up\"}\r\n        </Button>\r\n      </Box>\r\n    </form>\r\n  );\r\n\r\n  render() {\r\n    const linkText = this.state.toggle ? \"Log In\" : \"Sing Up\";\r\n    const linkTextReverse = this.state.toggle ? \"Join\" : \"Log In\";\r\n    const linkTitle = this.state.toggle ? \"Not a member?\" : \"Already a member?\";\r\n    const formTitle = this.state.toggle ? \"Log In\" : \"Create Account\";\r\n\r\n    return (\r\n      <div className=\"SingUpIn\">\r\n        <Container className=\"SingUpIn-container\" maxWidth=\"xs\">\r\n          <Typography variant=\"h5\">{formTitle}</Typography>\r\n          <>{this.renderForm()}</>\r\n          <Typography variant=\"overline\" className=\"SingUpIn-divider\">\r\n            {linkText} Via\r\n          </Typography>\r\n\r\n          <div className=\"oauth-container\">\r\n            <FacebookLogin\r\n              appId={process.env.REACT_APP_FB_CLIENT_ID}\r\n              textButton=\"FACEBOOK\"\r\n              cssClass=\"SingUpIn-via f\"\r\n              fields=\"name,email,picture\"\r\n              callback={this.responseThirdParty(\"facebook\")}\r\n              icon=\"fa-facebook\"\r\n            />\r\n            <GoogleLogin\r\n              clientId={process.env.REACT_APP_G_CLIENT_ID}\r\n              buttonText=\"GOOGLE\"\r\n              className=\"SingUpIn-via g\"\r\n              onSuccess={this.responseThirdParty(\"google\")}\r\n              onFailure={this.responseThirdParty(\"google\")}\r\n              cookiePolicy={\"single_host_origin\"}\r\n            />\r\n          </div>\r\n\r\n          <Typography className=\"SingUpIn-route\" variant=\"body2\">\r\n            {linkTitle}\r\n            <Typography\r\n              component=\"span\"\r\n              variant=\"body2\"\r\n              color=\"textPrimary\"\r\n              onClick={this.toggle}\r\n            >\r\n              {linkTextReverse}\r\n            </Typography>\r\n          </Typography>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(\r\n    state => ({\r\n      errorMessage: state.auth.error,\r\n      isAuthenticated: state.auth.isAuthenticated\r\n    }),\r\n    { signUp, logIn, oauthThirdParty }\r\n  ),\r\n  reduxForm({\r\n    form: \"sign\",\r\n    validate,\r\n    enableReinitialize: true\r\n  })\r\n)(SignUp);\r\n"],"sourceRoot":""}