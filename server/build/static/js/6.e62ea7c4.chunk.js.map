{"version":3,"sources":["validation/index.js","components/StyledInput/index.js","containers/Checkout/CheckoutForm/index.js","utils/masks.js","containers/Checkout/CheckoutCart/CheckoutProduct/index.js","containers/Checkout/FormsPreview/index.js","containers/Profile/OrdersPage/index.js","containers/Profile/ProfilePage/ProfileForm/index.js","containers/Profile/ProfilePage/ProfileShippingAddress/index.js","containers/Profile/ProfilePage/ProfileBillingAddress/index.js","containers/Profile/ProfilePage/index.js","containers/Profile/index.js"],"names":["required","value","undefined","validate","inputs","errors","firstname","lastname","country","city","zip","address","email","phone","password","cardnumber","exp","cvv","length","test","StyledInput","input","helperText","meta","touched","invalid","error","custom","fullWidth","variant","CheckoutForm","type","container","spacing","item","xs","sm","name","label","component","inputProps","maxLength","masks","createTextMask","guide","pattern","cardexp","CheckoutProduct","info","withUrl","currency","className","to","url","src","img","alt","color","title","gender","size","qty","price","FormsPreview","values","content","children","gutterBottom","data","rest","fullname","tranfsormValues","Object","entries","map","key","OrderPage","orders","Typography","align","itemI","Card","p","i","totalCalculation","ProfileForm","handleSubmit","onSubmit","initialValues","preview","formType","props","useState","open","setOpen","isValues","isObjectValues","cx","toAdd","a","async","Button","onClick","disabled","reduxForm","form","enableReinitialize","ProfilePage","userShipping","userBilling","setShipping","setBilling","ProfileShippingAddress","ProfileBillingAddress","useStyles","makeStyles","profile","padding","maxWidth","margin","connect","state","auth","addresses","shipping","billing","products","dispatch","setShippingAddress","setBillingAddress","match","history","location","classes","getModeFromPathname","pageName","modes","pathname","mode","suffix","matchPath","path","exact","find","result","setState","useEffect","Tabs","onChange","_","push","handlePath","Tab","disableRipple","OrdersPage"],"mappings":"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","file":"static/js/6.e62ea7c4.chunk.js","sourcesContent":["\r\nexport const required = value => value ? undefined : null\r\n// const max = (max) => (value) =>\r\n//   value && value.length > max ? `Must be ${max} characters or less` : undefined\r\n\r\nexport const validate = (inputs) => {\r\n  const errors = {};\r\n  const emailReg = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i\r\n\r\n  const { firstname, lastname, country, city, zip, address, email, phone, password } = inputs\r\n  const { cardnumber, exp, cvv } = inputs\r\n\r\n  if (!firstname) {\r\n    errors.firstname = 'Please enter your first name'\r\n  } else if (firstname.length < 2) {\r\n    errors.firstname = 'Entry is too short, please lengthen your entry'\r\n  }\r\n\r\n  if (!lastname) {\r\n    errors.lastname ='Please enter your last name'\r\n  } else if (lastname.length < 2) {\r\n    errors.lastname = 'Entry is too short, please lengthen your entry'\r\n  }\r\n\r\n  if (!country) {\r\n    errors.country = 'Please enter country'\r\n  } else if (country.length < 2) {\r\n    errors.country = 'Please enter a valid country'\r\n  }\r\n\r\n  if (!city) {\r\n    errors.city = 'Please enter city'\r\n  } else if (city.length < 2) {\r\n    errors.city = 'Please enter a valid city'\r\n  }\r\n\r\n  if (!zip) {\r\n    errors.zip = 'Please enter your postal code'\r\n  } else if (zip.length < 3) {\r\n    errors.zip = 'Please enter a valid postal code'\r\n  }\r\n\r\n  if (!address) {\r\n    errors.address = 'Please enter your address'\r\n  } else if (address.length < 2) {\r\n    errors.address = 'Please enter a valid address'\r\n  }\r\n\r\n  if (!email) {\r\n    errors.email = 'Please enter your email address'\r\n  } else if (!emailReg.test(email)) {\r\n    errors.email = 'Please enter a valid email address'\r\n  }\r\n\r\n  if (!phone) {\r\n    errors.phone = 'Please enter your phone number'\r\n  } else if (phone.length <= 9) {\r\n    errors.phone = 'Please enter a valid phone number'\r\n  }\r\n\r\n  if (!password) {\r\n    errors.password = 'Please enter your password'\r\n  } else if (password.length < 5) {\r\n    errors.password = 'Password is too short'\r\n  }\r\n\r\n\r\n  if(!cardnumber || cardnumber.length < 16) errors.cardnumber = 'Please enter card number'\r\n  if(!exp || exp.length < 4) errors.exp = 'Please enter expiration date'\r\n  if(!cvv || cvv.length < 4) errors.cvv = 'Please enter security code'\r\n\r\n  return errors\r\n};\r\n","import React from \"react\";\r\nimport {TextField} from \"@material-ui/core\";\r\n\r\n\r\nconst StyledInput = ({input, helperText, meta: {touched, invalid, error}, ...custom}) => (\r\n  <TextField\r\n    fullWidth\r\n    variant=\"outlined\"\r\n    {...input}\r\n    {...custom}\r\n    helperText={error && touched ? error : null}\r\n    error={touched && invalid}\r\n  />\r\n)\r\n\r\nexport default StyledInput\r\n","import React from \"react\";\r\nimport {Field} from \"redux-form\";\r\nimport StyledInput from \"components/StyledInput\";\r\nimport {required} from \"validation\";\r\nimport {Grid} from \"@material-ui/core\";\r\nimport masks from \"utils/masks\";\r\n\r\n\r\nconst CheckoutForm = ({type}) => (\r\n  <>\r\n    {type === \"shipping\" && (\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={12} sm={6}>\r\n          <Field\r\n            name=\"firstname\"\r\n            label=\"First Name\"\r\n            component={StyledInput}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Field\r\n            name=\"lastname\"\r\n            label=\"Last Name\"\r\n            component={StyledInput}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Field\r\n            name=\"address\"\r\n            label=\"Address\"\r\n            component={StyledInput}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n          <Field\r\n            name=\"country\"\r\n            label=\"Country\"\r\n            component={StyledInput}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={6} sm={4}>\r\n          <Field\r\n            name=\"city\"\r\n            label=\"City\"\r\n            component={StyledInput}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={6} sm={4}>\r\n          <Field\r\n            name=\"zip\"\r\n            label=\"Postal Code\"\r\n            inputProps={{maxLength: 12}}\r\n            type=\"tel\"\r\n            component={StyledInput}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Field\r\n          name=\"email\"\r\n          label=\"Email\"\r\n          type=\"email\"\r\n          component={StyledInput}\r\n        />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Field\r\n            name=\"phone\"\r\n            label=\"Phone\"\r\n            inputProps={{maxLength: 30}}\r\n            type=\"tel\"\r\n            component={StyledInput}\r\n            {...masks.phone}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    )}\r\n    {type === \"billing\" && (\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={12} sm={6}>\r\n          <Field\r\n            name=\"firstname\"\r\n            label=\"First Name\"\r\n            variant=\"outlined\"\r\n            component={StyledInput}\r\n            validate={[required]}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Field\r\n            name=\"lastname\"\r\n            label=\"Last Name\"\r\n            component={StyledInput}\r\n            validate={[required]}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Field\r\n            name=\"address\"\r\n            label=\"Address\"\r\n            component={StyledInput}\r\n            validate={[required]}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n          <Field\r\n            name=\"country\"\r\n            label=\"Country\"\r\n            component={StyledInput}\r\n            validate={[required]}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={6} sm={4}>\r\n          <Field\r\n            name=\"city\"\r\n            label=\"City\"\r\n            component={StyledInput}\r\n            validate={[required]}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={6} sm={4}>\r\n          <Field\r\n            name=\"zip\"\r\n            label=\"Postal Code\"\r\n            inputProps={{ maxLength: 12 }}\r\n            type=\"tel\"\r\n            component={StyledInput}\r\n            validate={[required]}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    )}\r\n  </>\r\n)\r\n\r\nexport default CheckoutForm\r\n","import {createTextMask} from 'redux-form-input-masks';\r\n\r\nconst masks = {\r\n  phone: createTextMask({\r\n    guide: false,\r\n    pattern: '9 (99) 999 99 99'\r\n  }),\r\n  cardnumber: createTextMask({\r\n    guide: false,\r\n    pattern: '9999 9999 9999 9999'\r\n  }),\r\n  cardexp: createTextMask({\r\n    guide: false,\r\n    pattern: '99/99'\r\n }),\r\n}\r\n\r\nexport default masks\r\n","import React from \"react\";\r\nimport \"./styles.sass\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Typography} from \"@material-ui/core\";\r\n\r\n\r\nconst CheckoutProduct = ({\r\n  info,\r\n  withUrl,\r\n  currency\r\n}) => {\r\n  return (\r\n    <div className=\"checkoutProduct\">\r\n      <div className=\"checkoutProduct-img\">\r\n        {withUrl ? (\r\n          <Link to={info.url}>\r\n            <img src={info.img} alt=\"img\" />\r\n          </Link>\r\n        ) : (\r\n          <img src={info.img} alt=\"img\" />\r\n        )}\r\n      </div>\r\n      <div className=\"checkoutProduct-info\">\r\n        <Typography\r\n          component=\"div\"\r\n          color=\"textPrimary\"\r\n          className=\"checkoutProduct-info-title\"\r\n        >\r\n          {withUrl ? (\r\n            <Link to={info.url}>{info.title}</Link>\r\n          ) : info.title}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"div\">\r\n          Gender: {info.gender}\"s\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"div\">\r\n          Color: {info.color}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"div\">\r\n          Size: {info.size}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"div\">\r\n          Qty: {info.qty} / {currency}{info.price}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"textPrimary\" component=\"div\">\r\n          {currency}{info.qty * info.price}\r\n        </Typography>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CheckoutProduct\r\n","import React from \"react\";\r\nimport \"./styles.sass\";\r\nimport {Typography} from \"@material-ui/core\";\r\n\r\n\r\nconst FormsPreview = ({\r\n  title,\r\n  content = {},\r\n  children,\r\n}) => {\r\n  const tranfsormValues = (data) => {\r\n    const {firstname, lastname, ...rest} = data\r\n    if(firstname || lastname){\r\n      return {\r\n        fullname: `${firstname} ${lastname}`,\r\n        ...rest\r\n      }\r\n    }\r\n    return rest\r\n  }\r\n\r\n  const renderValues = (values) => (\r\n    Object.entries(values).map(([key, value]) => (\r\n      <Typography\r\n        variant=\"body2\"\r\n        color=\"textSecondary\"\r\n        key={key}\r\n        children={value}\r\n      />\r\n    ))\r\n  )\r\n\r\n  return (\r\n    <div className=\"formPreview\">\r\n      {title && (\r\n        <Typography\r\n          gutterBottom\r\n          className=\"formPreview-title\"\r\n        >\r\n          {title}\r\n        </Typography>\r\n      )}\r\n      <div>\r\n        {renderValues(tranfsormValues(content))}\r\n      </div>\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FormsPreview\r\n","import React from \"react\";\r\nimport \"./styles.sass\";\r\nimport {Card, Typography} from \"@material-ui/core\";\r\nimport {totalCalculation} from \"utils\";\r\nimport CheckoutProduct from \"containers/Checkout/CheckoutCart/CheckoutProduct\";\r\n// import moment from \"moment\"\r\n\r\n\r\nconst OrderPage = ({\r\n  orders,\r\n  currency\r\n}) => {\r\n  return (\r\n    <div className=\"orderPage\">\r\n      <Typography\r\n        variant=\"h5\"\r\n        component=\"h2\"\r\n        align=\"center\"\r\n        className=\"orderPage-title\"\r\n        children=\"My Orders\"\r\n      />\r\n      <div>\r\n        {!orders.length ? (\r\n\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            component=\"div\"\r\n            align=\"center\"\r\n            children=\"You don't have any orders yet\"\r\n          />\r\n        ) : (\r\n          orders.map((item, itemI) => (\r\n            <Card className=\"orderPage-block\" key={itemI}>\r\n              {item.map((p, i) => (\r\n                <CheckoutProduct key={i} withUrl info={p} currency={currency} />\r\n              ))}\r\n              <Typography variant=\"h6\" component=\"div\" className=\"orderPage-total\">\r\n                Total: <span>{currency}{totalCalculation(item)}</span>\r\n              </Typography>\r\n              {/* <Typography align=\"left\" variant=\"caption\" style={{padding: 8, display:\"block\"}}>\r\n                {moment(new Date()).format(\"MMM DD, YYYY HH:mm\")} */}\r\n                {/* todo */}\r\n              {/* </Typography> */}\r\n            </Card>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OrderPage\r\n","import React, {useState} from \"react\";\r\nimport \"./styles.sass\";\r\nimport {Button, Typography} from \"@material-ui/core\";\r\nimport FormsPreview from \"containers/Checkout/FormsPreview\";\r\nimport CheckoutForm from \"containers/Checkout/CheckoutForm\";\r\nimport {isObjectValues} from \"utils\";\r\nimport cx from \"classnames\";\r\n\r\n\r\nconst ProfileForm = ({\r\n  handleSubmit,\r\n  invalid,\r\n  onSubmit,\r\n  initialValues,\r\n  preview,\r\n  formType,\r\n  ...props\r\n}) => {\r\n  const [open, setOpen] = useState(false)\r\n  const isValues = isObjectValues(initialValues)\r\n  const submit = async (value) => {\r\n    await onSubmit(value)\r\n    setOpen(false)\r\n  }\r\n\r\n  return (\r\n    <div className={cx('ProfileForm', {toAdd: !isValues && !open})}>\r\n      <Typography variant=\"h6\" className=\"ProfileForm-header\">\r\n        {props.title}\r\n      </Typography>\r\n      <div className=\"ProfileForm-preview\">\r\n        {open ? (\r\n          <form onSubmit={handleSubmit(submit)}>\r\n            <CheckoutForm type={formType} />\r\n            <div className=\"formBtns\">\r\n              <Button\r\n                onClick={() => setOpen(false)}\r\n                children=\"Cancel\"\r\n              />\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                disabled={invalid}\r\n                children=\"Save\"\r\n              />\r\n            </div>\r\n          </form>\r\n          ) : (\r\n          <>\r\n            <>\r\n              {isValues && <FormsPreview content={preview} />}\r\n            </>\r\n            <Button\r\n              variant=\"contained\"\r\n              color='primary'\r\n              className=\"openForm\"\r\n              onClick={() => setOpen(true)}\r\n            >\r\n              {isValues ? \"Edit\" : \"Add\"}\r\n            </Button>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileForm\r\n","import React from \"react\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {validate} from \"validation\";\r\nimport ProfileForm from \"../ProfileForm\";\r\n\r\n\r\nexport default reduxForm({\r\n  form: \"profile-shipping\",\r\n  validate,\r\n  enableReinitialize: true\r\n})((props) => (<ProfileForm {...props} />))\r\n","import React from \"react\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {validate} from \"validation\";\r\nimport ProfileForm from \"../ProfileForm\";\r\n\r\n\r\nexport default reduxForm({\r\n  form: \"profile-billing\",\r\n  validate,\r\n  enableReinitialize: true\r\n})((props) => (<ProfileForm {...props} />))\r\n","import React from \"react\";\r\nimport \"./styles.sass\";\r\nimport {Typography} from \"@material-ui/core\";\r\nimport ProfileShippingAddress from \"./ProfileShippingAddress\";\r\nimport ProfileBillingAddress from \"./ProfileBillingAddress\";\r\n\r\n\r\nconst ProfilePage = ({\r\n  fullname,\r\n  userShipping,\r\n  userBilling,\r\n  setShipping,\r\n  setBilling\r\n}) => {\r\n  return (\r\n    <div className=\"profilePage\">\r\n      <Typography\r\n        variant=\"h5\"\r\n        component=\"h2\"\r\n        align=\"center\"\r\n        className=\"profilePage-title\"\r\n      >\r\n        Hi, {fullname}\r\n      </Typography>\r\n      <div className=\"profilePage-forms\">\r\n        <div className=\"profilePage-forms-form\">\r\n          <ProfileShippingAddress\r\n            formType=\"shipping\"\r\n            preview={userShipping}\r\n            initialValues={userShipping}\r\n            onSubmit={setShipping}\r\n            title=\"Shipping Address\"\r\n          />\r\n        </div>\r\n        <div className=\"profilePage-forms-form\">\r\n          <ProfileBillingAddress\r\n            formType=\"billing\"\r\n            preview={userBilling}\r\n            initialValues={userBilling}\r\n            onSubmit={setBilling}\r\n            title=\"Billing Address\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfilePage\r\n","import React, {useState, useEffect} from \"react\";\r\nimport {matchPath} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {Tabs, Tab} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport OrdersPage from \"./OrdersPage\";\r\nimport ProfilePage from \"./ProfilePage\";\r\nimport {\r\n  setShippingAddress,\r\n  setBillingAddress\r\n} from \"redux/actions/auth\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  profile: {\r\n    padding: \"60px 12px\",\r\n    maxWidth: 1200,\r\n    margin: \"0 auto\",\r\n  }\r\n})\r\n\r\n\r\nconst Profile = ({\r\n  match,\r\n  history,\r\n  location,\r\n  currency,\r\n  orders,\r\n  userShipping,\r\n  userBilling,\r\n  fullname,\r\n  setShipping,\r\n  setBilling,\r\n}) => {\r\n  const classes = useStyles()\r\n\r\n  const getModeFromPathname = (pageName, modes, pathname) => (\r\n    Object.entries(modes)\r\n      .map(([mode, suffix]) => ({\r\n        mode,\r\n        ...(matchPath(pathname, {\r\n          path: `/${pageName}${suffix}`,\r\n          exact: true\r\n        }) || {})\r\n      }))\r\n      .find(result => result.path) || {}\r\n  );\r\n\r\n  const modes = {\r\n    preview: \"\",\r\n    orders: \"/orders\",\r\n  }\r\n\r\n  const [state, setState] = useState({\r\n    ...getModeFromPathname(\"profile\", modes, location.pathname),\r\n  })\r\n\r\n  const handlePath = async (pathname) => {\r\n    await history.push(pathname)\r\n    const result = await getModeFromPathname(\"profile\", modes, pathname)\r\n    await setState({...result})\r\n  }\r\n\r\n  useEffect(() => {\r\n    setState(getModeFromPathname(\"profile\", modes, location.pathname))\r\n  }, [location.pathname, modes])\r\n\r\n\r\n  return (\r\n    <div className={classes.profile}>\r\n      <Tabs\r\n        variant=\"fullWidth\"\r\n        value={location.pathname}\r\n        onChange={(_, value) => handlePath(value)}\r\n      >\r\n        <Tab\r\n          disableRipple\r\n          fullWidth\r\n          value={match.url}\r\n          label=\"Profile\"\r\n        />\r\n        <Tab\r\n          disableRipple\r\n          fullWidth\r\n          value={`${match.url}/orders`}\r\n          label=\"Orders\"\r\n        />\r\n      </Tabs>\r\n      {state.mode === \"preview\" ? (\r\n        <ProfilePage\r\n          fullname={fullname}\r\n          userShipping={userShipping}\r\n          userBilling={userBilling}\r\n          setShipping={setShipping}\r\n          setBilling={setBilling}\r\n        />\r\n      ) : state.mode = \"orders\" ? (\r\n        <OrdersPage\r\n          currency={currency}\r\n          orders={orders}\r\n        />\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    userShipping: state.auth.addresses.shipping,\r\n    userBilling: state.auth.addresses.billing,\r\n    fullname: state.auth.fullname,\r\n    currency: state.products.currency,\r\n    orders: state.auth.orders\r\n  }),\r\n  (dispatch) => ({\r\n    setShipping: value => dispatch(setShippingAddress(value)),\r\n    setBilling: value => dispatch(setBillingAddress(value))\r\n  })\r\n)(Profile)\r\n"],"sourceRoot":""}